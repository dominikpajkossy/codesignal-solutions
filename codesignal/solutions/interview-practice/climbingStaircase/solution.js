function solution(n,k) {    let solutions = [];        function backTrack(stack){        let sum = stack.reduce((a,b)=>{return a+b}, 0)                if ( sum === n ) return true;                if ( sum > n ) return false;                if ( sum < n ){            let hasItem = false;            for ( var i = 1; i <= k; i++ ){                stack.push(i)                if ( backTrack(stack) ){                    let localCopy = stack.map(copy=>copy);                    solutions.push(localCopy)                                        hasItem = true;                }                stack.pop()            }        }    }        backTrack([]);        if ( k === 0 && n === 0 ) return [[]];    else return solutions;}